if(!("rstudioapi" %in% installed.packages()[,"Package"])){install.packages("rstudioapi")};require("rstudioapi");setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
rm(list = ls())
setwd(dirname(rstudioapi::getActiveDocumentContext()$path));debugging_mode<-F;
getwd()
source("./internal/R/dependencies.R")
list.files()
data<-read.csv("data_nonames master 09082018.csv",stringsAsFactors = F)
data<-read.csv("./internal/input_files/data.csv",stringsAsFactors = F)
data
# load questionnaire and create associated functions:
questionnaire<-load_questionnaire(data,questions.file = "./internal/input_files/kobo questions.csv",
choices.file = "./internal/input_files/kobo choices.csv",
choices.label.column.to.use = "label::English")
# load questionnaire and create associated functions:
questionnaire<-load_questionnaire(data,questions.file = "./internal/input_files/kobo questions.csv",
choices.file = "./internal/input_files/kobo choices.csv",
choices.label.column.to.use = "label")
names(data)
# load questionnaire and create associated functions:
questionnaire<-load_questionnaire(data,questions.file = "./internal/input_files/kobo questions.csv",
choices.file = "./internal/input_files/kobo choices.csv",
choices.label.column.to.use = "label")
# load questionnaire and create associated functions:
questionnaire<-load_questionnaire(data,questions.file = "./internal/input_files/kobo questions.csv",
choices.file = "./internal/input_files/kobo choices.csv",
choices.label.column.to.use = "name")
debug(load_questionnaire)
# load questionnaire and create associated functions:
questionnaire<-load_questionnaire(data,questions.file = "./internal/input_files/kobo questions.csv",
choices.file = "./internal/input_files/kobo choices.csv",
choices.label.column.to.use = "name")
choices <- read.csv(choices.file, stringsAsFactors = F, header = T)
# harmonise data column references
names(questions) <- to_alphanumeric_lowercase(names(questions))
names(choices) <- to_alphanumeric_lowercase(names(choices))
names(data) <- to_alphanumeric_lowercase(names(data))
choices.label.column.to.use <- to_alphanumeric_lowercase(choices.label.column.to.use)
# sanitise
insure.string.is.column.header(questions, "type")
insure.string.is.column.header(questions, "name")
insure.string.is.column.header(choices, choices.label.column.to.use)
insure.string.is.column.header(choices, "list_name")
begin_gr <- grep(paste(c("begin_group","begin group"), collapse = "|"), questions$type, ignore.case = T)
end_gr <- grep(paste(c("end_group","end group"), collapse = "|"), questions$type, ignore.case = T)
number_of_questions <- (length(questions$name) - length(begin_gr) - length(end_gr))
questions$relevant<-add_group_conditions_to_question_conditions(questions)
# get data column names
data_colnames<-names(data)
number_of_questions
data_colnames
questions$name
questions$name %in% data_colnames
questions$name
colnames(data)
